name: Build and Run

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        run: rustup default stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index
          restore-keys: |
            ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cargo-build

      - name: Run tests on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker-compose up -d
          sleep 5
          cargo test
        env:
          POSTGRES_USER_TEST: ${{ secrets.POSTGRES_USER_TEST }}
          POSTGRES_PASSWORD_TEST: ${{ secrets.POSTGRES_PASSWORD_TEST }}
          POSTGRES_DB_TEST: ${{ secrets.POSTGRES_DB_TEST }}
          PG_PORT_TEST: ${{ secrets.PG_PORT_TEST }}
          DATABASE_URL_TEST: "postgres://${{ secrets.POSTGRES_USER_TEST }}:${{ secrets.POSTGRES_PASSWORD_TEST }}@localhost:${{ secrets.PG_PORT_TEST }}/${{ secrets.POSTGRES_DB_TEST }}"

      - name: Create artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: poke-collect-ubuntu
          path: target/release

  run:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: poke-collect-ubuntu
          path: target/release

      - name: Give execution rights to the binary
        run: chmod +x target/release/poke-collect

      - name: Run catch command
        run: |
          docker-compose up -d
          sleep 5
          target/release/poke-collect catch pikachu
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          PG_PORT: ${{ secrets.PG_PORT }}
          DATABASE_URL: "postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:${{ secrets.PG_PORT }}/${{ secrets.POSTGRES_DB }}"
